R2_p50values<-summary(fitp50values)$r.squared
intercept_p50values
slope_p50values
R2_p50values
plot( tempvalues, nvalues,xlab="Temperature Values", ylab="Best Fit P50", main="Best Fit P50 vs. Temp")
fitnvalues<- lm( nvalues ~ tempvalues)
abline(fitnvalues)
intercept_nvalues<-fitnvalues$coefficients[[1]]
slope_nvalues<-fitnvalues$coefficients[[2]]
R2_nvalues<-summary(fitnvalues)$r.squared
intercept_nvalues
slope_nvalues
R2_nvalues
#
#Part VII
pHvalues<-c(7.61, 7.36, 7.15, 6.92)
p50values<-c(19.1, 23.4, 30.9, 40.7)
plot(pHvalues, p50values, xlab="pH", ylab="p50 values in torr", main="p50 versus pH")
plot(pHvalues, p50values, xlab="pH", ylab="p50 values in torr", main="p50 versus pH with line of Best Fit")
fitpHvalues<- lm(p50values ~ pHvalues)
abline(fitpHvalues)
intercept_pHvalues<-fitpHvalues$coefficients[[1]]
slope_pHvalues<-fitpHvalues$coefficients[[2]]
R2_pHvalues<-summary(fitpHvalues)$r.squared
intercept_pHvalues
slope_pHvalues
R2_pHvalues
#
po2<-seq(0, 150, 0.01)
plot(P_o2, simulation3(Po2, 50, 3.2), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation (pH 7.61, n= 2.8) vs. 44 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
p50(pH)<-function(pH){
y<- simulation3(Po2, (-31.56034*pH+257.6531), 2.8)
return(y)
}
p50pH<-function(pH){
y<- simulation3(Po2, (-31.56034*pH+257.6531), 2.8)
return(y)
}
p50pH(7.61)
p50pH<-function(pH){
y<- (-31.56034*pH+257.6531)
return(y)
}
p50pH(7.61)
plot(pHvalues, p50values, xlab="pH", ylab="p50 values in torr", main="p50 versus pH with line of Best Fit")
fitpHvalues<- lm(p50values ~ pHvalues)
abline(fitpHvalues)
intercept_pHvalues<-fitpHvalues$coefficients[[1]]
slope_pHvalues<-fitpHvalues$coefficients[[2]]
R2_pHvalues<-summary(fitpHvalues)$r.squared
intercept_pHvalues
slope_pHvalues
R2_pHvalues
#
po2<-seq(0, 150, 0.01)
p50pH<-function(pH){
y<- (-31.56034*pH+257.6531)
return(y)
p50pH(7.15)
p50pH(7.15)
plot(pHvalues, p50values, xlab="pH", ylab="p50 values in torr", main="p50 versus pH with line of Best Fit")
fitpHvalues<- lm(p50values ~ pHvalues)
abline(fitpHvalues)
intercept_pHvalues<-fitpHvalues$coefficients[[1]]
slope_pHvalues<-fitpHvalues$coefficients[[2]]
R2_pHvalues<-summary(fitpHvalues)$r.squared
intercept_pHvalues
slope_pHvalues
R2_pHvalues
#
po2<-seq(0, 150, 0.01)
p50pH<-function(pH){
y<- (-31.56034*pH+257.6531)
return(y)
}
p50pH(7.15)
rm(list=ls())
rm(list=ls())
p<-2.4 #p50
o2<-seq(0,100,1)
myo<-function(p50, pO2){
mbo<-pO2/(p50+pO2)
return(mbo)
}
plot(o2, myo(p,o2), xlab="pO2 mmHg", ylab="Fraction of total myoglobin that is oxygen ", main="Fraction of Oxygenated Myoglobin  at p50 of 2.5mmHg", xlim=c(0,100), ylim=c(0,1), type="o")
# got a sigmoidal curve that' p50 converses 1 or when all of the myoglobin is oxygenated.
#p50
p50_values<-c(1.1, 2.4, 3, 4.4, 5)
o2<-seq(0,100,1)
plot(0,0,type="n",xlab="pO2 mmHg", ylab="Fraction of Oxy. Myoglobin", main="Fraction Myoglobin Oxygen vs pO2 at p50 levels", xlim=c(0,110), ylim=c(0,1))
for(i in 1:length(p50_values)){
p50value<-p50_values[i]
myop50<-myo(p50value, o2)
lines(o2,myop50, col=(p50_values[i]))
}
abline(h=0.5, col=(6))
legend("topright", legend= c(p50_values), col=(1:5),lty=1, cex=0.8)
#It seems that as the the p50 increases, the oxygen dissociation curve shifts to the right.
exp=read.csv("/Users/haleyharris/Downloads/Experimental_Data.csv")
tempexp=read.csv("/Users/haleyharris/Downloads/Temp_data_ExpF21.csv")
#Technique 1
Exp_1<-exp$data_pO2
Exp_2<-exp$data_Y
Temp_32<-tempexp$data_pO2_32
Temp_32Y<-tempexp$data_Y_32
Temp_35<-tempexp$data_pO2_35
Temp_35Y<-tempexp$data_Y_35
Temp_38<-tempexp$data_pO2_38
Temp_38Y<-tempexp$data_Y_38
Temp_41<-tempexp$data_pO2_41
Temp_41Y<-tempexp$data_Y_41
Temp_44<-tempexp$data_pO2_44
Temp_44Y<-tempexp$data_Y_44
Temp_47<-tempexp$data_pO2_47
Temp_47Y<-tempexp$data_Y_47
Temp52<-tempexp$data_pO2_52
Temp52Y<-tempexp$data_Y_52
plot(Exp_1,Exp_2,xlab="pO2mmhg", ylab="oxygen saturation", main="Technique 1: Experimental Data ", xlim=c(0,100), ylim=c(0,100) )
abline(h=50,lty=2)
plot(Temp_32,Temp_32Y, main="Technique 1: Temp Data ", xlab="pO2 mmHg",ylab="oxygen saturation", col=(1), type ="l", xlim=c(0,100), ylim=c(0,100))
lines(Temp_35, Temp_35Y, col=(2))
lines(Temp_38, Temp_38Y, col=(3))
lines(Temp_41, Temp_41Y, col=(4))
lines(Temp_44, Temp_44Y, col=(5))
lines(Temp_47, Temp_47Y, col=(6))
lines(Temp52, Temp52Y, col=(7))
abline(h=50,lty=2)
legend("topright", legend= c(32,35,38,41,44,47,52), col=(1:7),lty=1, cex=0.8)
#Technique 2
expPo2<-exp[,1]
expY<-exp[,2]
temp32PO2<-tempexp[,1]
temp32Y<-tempexp[,2]
temp35PO2<-tempexp[,3]
temp35Y<-tempexp[,4]
temp38PO2<-tempexp[,5]
temp38Y<-tempexp[,6]
temp41PO2<-tempexp[,7]
temp41Y<-tempexp[,8]
temp44PO2<-tempexp[,9]
temp44Y<-tempexp[,10]
temp47PO2<-tempexp[,11]
temp47Y<-tempexp[,12]
temp52PO2<-tempexp[,13]
temp52Y<-tempexp[,14]
plot(expPo2,expY, main="Technique 2: Experimental Data ", xlab="pO2 mmHg", ylab="oxygen saturation", xlim=c(0,100), ylim=c(0,100))
abline(h=50,lty=2)
plot(temp32PO2,temp32Y, main="Technique 2: Temp Data ", xlab="pO2 mmHg", ylab="oxygen saturation", col=(1), type ="l", xlim=c(0,100), ylim=c(0,100))
lines(temp35PO2,temp35Y, col=(2))
lines(temp38PO2,temp38Y, col=(3))
lines(temp41PO2,temp41Y, col=(4))
lines(temp44PO2,temp44Y, col=(5))
lines(temp47PO2,temp47Y, col=(6))
lines(temp52PO2,temp52Y, col=(7))
abline(h=50,lty=2)
legend("topright", legend= c(32,35,38,41,44,47,52), col=(1:7),lty=1, cex=0.8)
#Technique 3
plot(exp[,1],exp[,2],xlab="pO2 mmHg", ylab="oxygen saturation", main="Technique 3: Experimental Data ", xlim=c(0,100), ylim=c(0,100))
abline(h=50,lty=2)
plot(tempexp[,1], tempexp[,2], xlab="pO2 mmHg", ylab="oxygen saturation", main="Technique 3: temp data", type="l", col=(1), xlim=c(0,100), ylim=c(0,100))
lines(tempexp[,3], tempexp[,4], col=(2))
lines(tempexp[,5], tempexp[,6],  col=(3))
lines(tempexp[,7], tempexp[,8],  col=(4))
lines(tempexp[,9], tempexp[,10], col=(5))
lines(tempexp[,11], tempexp[,12], col=(6))
lines(tempexp[,13], tempexp[,14], col=(7))
abline(h=50,lty=2)
legend("topright", legend= c(32,35,38,41,44,47,52), col=(1:7),lty=1, cex=0.4)
#As temperature increases, p50 increases and oxygen binding affinity decreases as the graph shifts right. This can be seen because 52 degrees celsius has the highest p50 and 32/35 degrees celsius have the lowest p50.
#independent Binding
P_o2<-seq(0,105,0.01)
K1<-.04
simulation<-function(po2,k){
y<-((po2*k)+3*(po2^2*k^2)+3*(po2^3*k^3)+(po2^4*k^4))/(1+4*(po2*k)+6*(po2^2*k^2)+4*(po2^3*k^3)+(po2^4*k^4))
return(y*100)
}
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Independent Binding Simulation vs. Experimental Data", xlim=c(0,100), type="l")
lines(P_o2, simulation(P_o2, K1), col=(2))
abline(h=50,lty=2)
legend("topright", legend= c("experimental", "Independent Sim"), col=(1:2),lty=1, cex=0.8)
#1 the two curves are very different. if indpendent, we see a hyperbolic shaped plot that is concave down.
# Fully COoperative
P_o2<-seq(0,105,0.01)
K1<-1/10
simulation2<-function(po2,p_50){
y<-po2^4/(po2^4+p_50^4)
return(y*100)
}
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Cooperative Binding Simulation vs. Experimental Data", xlim=c(0,100), ylim=c(0,105), type="l")
lines(P_o2, simulation2(P_o2, 47), col=(2))
lines(P_o2, simulation2(P_o2, 50),col=(3) )
lines(P_o2, simulation2(P_o2, 53), col=(4))
abline(h=50, lty=2)
legend("topright", legend= c("experimental", "p50 = 47", "p50 = 50", "p50 = 53"), col=(1:4),lty=1, cex=0.8)
#Cooperativity and Hill
simulation3<-function(po2,p50,n){
Y<-po2^n/(po2^n + p50^n)
return(Y*100)
}
#n=3
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Simulation vs. Experimental Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 47, 3), col=(2))
lines(P_o2, simulation3(P_o2, 47, 4), col=(3) )
lines(P_o2, simulation3(P_o2, 47, 5), col=(4))
abline(h=50, lty=2)
legend("topright", legend= c("experimental", "n=3", "n=4", "n=5"), col=(1:7),lty=1, cex=0.8)
P_o2<-seq(0,105,0.01)
#32
plot(Temp_32, Temp_32Y, xlab="pO2mmhg", ylab="oxygen saturation", main="Simulation(p50= 40 , n=3.2 ) vs. 32 degree Temp Data", xlim=c(20,80), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 40, 3), col=(2))
abline(h=50, lty=2)
#35
plot(Temp_35 ,Temp_35Y, xlab="pO2mmhg", ylab="oxygen saturation", main="Simulation(p50=40 , n=3.5 ) vs. 35 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 40, 3.5), col=(2))
abline(h=50, lty=2)
#38
plot(Temp_38 ,Temp_38Y, xlab="pO2mmhg", ylab="oxygen saturation", main="Simulation(p50= 41, n= 3.2 ) vs. 38 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 41, 3.2), col=(2))
abline(h=50, lty=2)
#41
plot(Temp_41 ,Temp_41Y, xlab="pO2mmhg", ylab="oxygen saturation", main="Simulation(p50= 46 , n= 3.4 ) vs. 41 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 46, 3.4), col=(2))
abline(h=50, lty=2)
#44
plot(Temp_44 ,Temp_44Y, xlab="pO2mmhg", ylab="oxygen saturation", main="Simulation(p50= 50, n= 3.2) vs. 44 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 50, 3.2), col=(2))
abline(h=50, lty=2)
#47
plot(Temp_47 ,Temp_47Y, xlab="pO2mmhg", ylab="oxygen saturation", main="Simulation(p50= 49 , n= 5) vs. 47 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 49, 5), col=(2))
abline(h=50, lty=2)
#52
plot(Temp52 ,Temp52Y, xlab="pO2mmhg", ylab="oxygen saturation", main="Simulation(p50= 57 , n= 2.8 ) vs. 52 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 56, 2.8), col=(2))
abline(h=50, lty=2)
p50values<-c(40, 40, 41, 46, 50, 49, 57)
nvalues<-c(3.2,3.5, 3.2, 3.4, 3.2, 5, 2.8)
tempvalues<-c(32, 35, 38, 41, 44, 47, 52)
plot(tempvalues, p50values, xlab="Temperature Values", ylab="Best Fit P50", main="Best Fit P50 vs. Temp" )
fitp50values<- lm( p50values ~ tempvalues)
abline(fitp50values)
intercept_p50values<-fitp50values$coefficients[[1]]
slope_p50values<-fitp50values$coefficients[[2]]
R2_p50values<-summary(fitp50values)$r.squared
intercept_p50values
slope_p50values
R2_p50values
plot( tempvalues, nvalues,xlab="Temperature Values", ylab="Best Fit P50", main="Best Fit P50 vs. Temp")
fitnvalues<- lm( nvalues ~ tempvalues)
abline(fitnvalues)
intercept_nvalues<-fitnvalues$coefficients[[1]]
slope_nvalues<-fitnvalues$coefficients[[2]]
R2_nvalues<-summary(fitnvalues)$r.squared
intercept_nvalues
slope_nvalues
R2_nvalues
#
#Part VII
pHvalues<-c(7.61, 7.36, 7.15, 6.92)
p50values<-c(19.1, 23.4, 30.9, 40.7)
plot(pHvalues, p50values, xlab="pH", ylab="p50 values in torr", main="p50 versus pH")
plot(pHvalues, p50values, xlab="pH", ylab="p50 values in torr", main="p50 versus pH with line of Best Fit")
fitpHvalues<- lm(p50values ~ pHvalues)
abline(fitpHvalues)
intercept_pHvalues<-fitpHvalues$coefficients[[1]]
slope_pHvalues<-fitpHvalues$coefficients[[2]]
R2_pHvalues<-summary(fitpHvalues)$r.squared
intercept_pHvalues
slope_pHvalues
R2_pHvalues
#
po2<-seq(0, 150, 0.01)
p50pH<-function(pH){
y<- (-31.56034*pH+257.6531)
return(y)
}
p50pH(7.15)
plot(P_o2, simulation3(Po2, 50, 3.2), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation (pH 7.61, n= 2.8) vs. 44 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
p50pH(7.61)
p50pH(7.36)
p50pH(7.15)
p50pH(6.92)
p50pHvalues<-c(p50pH(7.61), p50pH(7.36), p50pH(7.15),p50pH(6.92))
plot(po2, simulation3(po2, p50pH(7.61), 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation (pH 7.61, n= 2.8) vs. 44 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(po1, simulation3(po2, p50pH(7.36), 2.8))
plot(po2, simulation3(po2, p50pH(7.61), 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation (pH 7.61, n= 2.8) vs. 44 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(po1, simulation3(po2, p50pH(7.36), 2.8))
#Part VII
pHvalues<-c(7.61, 7.36, 7.15, 6.92)
p50values<-c(19.1, 23.4, 30.9, 40.7)
plot(pHvalues, p50values, xlab="pH", ylab="p50 values in torr", main="p50 versus pH")
plot(pHvalues, p50values, xlab="pH", ylab="p50 values in torr", main="p50 versus pH with line of Best Fit")
fitpHvalues<- lm(p50values ~ pHvalues)
abline(fitpHvalues)
intercept_pHvalues<-fitpHvalues$coefficients[[1]]
slope_pHvalues<-fitpHvalues$coefficients[[2]]
R2_pHvalues<-summary(fitpHvalues)$r.squared
intercept_pHvalues
slope_pHvalues
R2_pHvalues
#
po2<-seq(0, 150, 0.01)
p50pH<-function(pH){
y<- (-31.56034*pH+257.6531)
return(y)
}
p50pH(7.61)
p50pH(7.36)
p50pH(7.15)
p50pH(6.92)
p50pHvalues<-c(p50pH(7.61), p50pH(7.36), p50pH(7.15),p50pH(6.92))
plot(po2, simulation3(po2, p50pH(7.61), 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation (pH 7.61, n= 2.8) vs. 44 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(po1, simulation3(po2, p50pH(7.36), 2.8))
p501<-p50pH(7.61)
p502<-p50pH(7.36)
p503<-p50pH(7.15)
p504<-p50pH(6.92)
p50pHvalues<-c(p50pH(7.61), p50pH(7.36), p50pH(7.15),p50pH(6.92))
plot(po2, simulation3(po2, p501, 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation (pH 7.61, n= 2.8) vs. 44 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(po1, simulation3(po2, p502, 2.8))
plot(po2, simulation3(po2, p501, 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation (pH 7.61, n= 2.8) vs. 44 degree Temp Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(po2, simulation3(po2, p502, 2.8))
lines(po2, simulation3(po2, p503, 2.8))
lines(po2, simulation3(po2, p504, 2.8))
abline(h=50, lty=2)
plot(po2, simulation3(po2, p501, 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation  Temp Data", xlim=c(0,110), ylim=c(0,105), type="l", col=(1))
lines(po2, simulation3(po2, p502, 2.8), col=(2))
lines(po2, simulation3(po2, p503, 2.8), col=(3))
lines(po2, simulation3(po2, p504, 2.8), col=(4))
abline(h=50, lty=2)
plot(po2, simulation3(po2, p501, 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation  Temp Data", xlim=c(0,110), ylim=c(0,105), type="l", col=(1))
lines(po2, simulation3(po2, p502, 2.8), col=(2))
lines(po2, simulation3(po2, p503, 2.8), col=(3))
lines(po2, simulation3(po2, p504, 2.8), col=(4))
abline(h=50, lty=2)
legend("topright", legend=c("pH=7.61","pH=7.36","pH=7.15","pH=6.92"), lty=1, col=(1:4), cex=0.8)
plot(po2, simulation3(po2, p501, 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation  Temp Data", xlim=c(0,110), ylim=c(0,105), type="l", col=(1))
lines(po2, simulation3(po2, p502, 2.8), col=(2))
lines(po2, simulation3(po2, p503, 2.8), col=(3))
lines(po2, simulation3(po2, p504, 2.8), col=(4))
abline(h=50, lty=2)
abline(v=40, lty=2)
abline(v=100, lty=2)
legend("topright", legend=c("pH=7.61","pH=7.36","pH=7.15","pH=6.92"), lty=1, col=(1:4), cex=0.8)
po2<-seq(0, 150, 0.01)
p50pH<-function(pH){
y<- (-31.56034*pH+257.6531)
return(y)
}
p501<-p50pH(7.61)
p502<-p50pH(7.36)
p503<-p50pH(7.15)
p504<-p50pH(6.92)
p50pHvalues<-c(p50pH(7.61), p50pH(7.36), p50pH(7.15),p50pH(6.92))
plot(po2, simulation3(po2, p501, 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation  Temp Data", xlim=c(0,140), ylim=c(0,150), type="l", col=(1))
lines(po2, simulation3(po2, p502, 2.8), col=(2))
lines(po2, simulation3(po2, p503, 2.8), col=(3))
lines(po2, simulation3(po2, p504, 2.8), col=(4))
abline(h=50, lty=2)
abline(v=40, lty=2)
abline(v=100, lty=2)
legend("topright", legend=c("pH=7.61","pH=7.36","pH=7.15","pH=6.92"), lty=1, col=(1:4), cex=0.8)
plot(po2, simulation3(po2, p501, 2.8), xlab="pO2mmhg", ylab="oxygen saturation", main="pH Hill Equation  Temp Data", xlim=c(0,140), ylim=c(0,150), type="l", col=(1))
lines(po2, simulation3(po2, p502, 2.8), col=(2))
lines(po2, simulation3(po2, p503, 2.8), col=(3))
lines(po2, simulation3(po2, p504, 2.8), col=(4))
lines(po2, simulation3(po2, 2.4, 2.8), col=(5))
abline(h=50, lty=2)
abline(v=40, lty=2)
abline(v=100, lty=2)
legend("topright", legend=c("pH=7.61","pH=7.36","pH=7.15","pH=6.92", "myoglobin curve"), lty=1, col=(1:5), cex=0.8)
#independent Binding
P_o2<-seq(0,105,0.01)
K1<-.04
K2<-0.05
K3<-0.8
simulation<-function(po2,k){
y<-((po2*k)+3*(po2^2*k^2)+3*(po2^3*k^3)+(po2^4*k^4))/(1+4*(po2*k)+6*(po2^2*k^2)+4*(po2^3*k^3)+(po2^4*k^4))
return(y*100)
}
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Independent Binding Simulation K=0.04 vs. Experimental Data", xlim=c(0,100), type="l")
lines(P_o2, simulation(P_o2, K1), col=(2))
abline(h=50,lty=2)
legend("topright", legend= c("experimental", "Independent Sim"), col=(1:2),lty=1, cex=0.8)
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Independent Binding Simulation K=0.05 vs. Experimental Data", xlim=c(0,100), type="l")
lines(P_o2, simulation(P_o2, K1), col=(2))
abline(h=50,lty=2)
legend("topright", legend= c("experimental", "Independent Sim"), col=(1:2),lty=1, cex=0.8)
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Independent Binding Simulation K=0.08 vs. Experimental Data", xlim=c(0,100), type="l")
lines(P_o2, simulation(P_o2, K1), col=(2))
abline(h=50,lty=2)
legend("topright", legend= c("experimental", "Independent Sim"), col=(1:2),lty=1, cex=0.8)
#1 the two curves are very different. if indpendent, we see a hyperbolic shaped plot that is concave down.
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Independent Binding Simulation K=0.04 vs. Experimental Data", xlim=c(0,100), type="l")
lines(P_o2, simulation(P_o2, K1), col=(2))
abline(h=50,lty=2)
legend("topright", legend= c("experimental", "Independent Sim"), col=(1:2),lty=1, cex=0.8)
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Independent Binding Simulation K=0.05 vs. Experimental Data", xlim=c(0,100), type="l")
lines(P_o2, simulation(P_o2, K2), col=(2))
abline(h=50,lty=2)
legend("topright", legend= c("experimental", "Independent Sim"), col=(1:2),lty=1, cex=0.8)
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Independent Binding Simulation K=0.08 vs. Experimental Data", xlim=c(0,100), type="l")
lines(P_o2, simulation(P_o2, K3), col=(2))
abline(h=50,lty=2)
legend("topright", legend= c("experimental", "Independent Sim"), col=(1:2),lty=1, cex=0.8)
simulation3<-function(po2,p50,n){
Y<-po2^n/(po2^n + p50^n)
return(Y*100)
}
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Hill Simulation vs. Experimental Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 47, 4), col=(2))
legend("topright", legend= c("experimental", "n=4"), col=(1:2),lty=1, cex=0.8)
plot(Exp_1 ,Exp_2, xlab="pO2mmhg", ylab="oxygen saturation", main="Hill Simulation vs. Experimental Data", xlim=c(0,110), ylim=c(0,105), type="l")
lines(P_o2, simulation3(P_o2, 47, 3), col=(2))
lines(P_o2, simulation3(P_o2, 47, 4), col=(3) )
lines(P_o2, simulation3(P_o2, 47, 5), col=(4))
abline(h=50, lty=2)
legend("topright", legend= c("experimental", "n=3", "n=4", "n=5"), col=(1:4),lty=1, cex=0.8)
intercept_nvalues print("intercept")
plot( tempvalues, nvalues,xlab="Temperature Values", ylab="Best Fit P50", main="Best Fit P50 vs. Temp")
fitnvalues<- lm( nvalues ~ tempvalues)
abline(fitnvalues)
intercept_nvalues<-fitnvalues$coefficients[[1]]
slope_nvalues<-fitnvalues$coefficients[[2]]
R2_nvalues<-summary(fitnvalues)$r.squared
intercept_nvalues
slope_nvalues
R2_nvalues
plot(tempvalues, p50values, xlab="Temperature Values", ylab="Best Fit P50", main="Best Fit P50 vs. Temp" )
p50values<-c(40, 40, 41, 46, 50, 49, 57)
nvalues<-c(3.2,3.5, 3.2, 3.4, 3.2, 5, 2.8)
tempvalues<-c(32, 35, 38, 41, 44, 47, 52)
plot(tempvalues, p50values, xlab="Temperature Values", ylab="Best Fit P50", main="Best Fit P50 vs. Temp" )
fitp50values<- lm( p50values ~ tempvalues)
abline(fitp50values)
intercept_p50values<-fitp50values$coefficients[[1]]
slope_p50values<-fitp50values$coefficients[[2]]
R2_p50values<-summary(fitp50values)$r.squared
intercept_p50values
slope_p50values
R2_p50values
plot( tempvalues, nvalues,xlab="Temperature Values", ylab="Best Fit P50", main="Best Fit P50 vs. Temp")
fitnvalues<- lm( nvalues ~ tempvalues)
abline(fitnvalues)
intercept_nvalues<-fitnvalues$coefficients[[1]]
slope_nvalues<-fitnvalues$coefficients[[2]]
R2_nvalues<-summary(fitnvalues)$r.squared
intercept_nvalues
slope_nvalues
R2_nvalues
install.packages(pkgs, lib, repos = getOption("repos"),
contriburl = contrib.url(repos, type),
method, available = NULL, destdir = NULL,
dependencies = NA, type = getOption("pkgType"),
configure.args = getOption("configure.args"),
configure.vars = getOption("configure.vars"),
clean = FALSE, Ncpus = getOption("Ncpus", 1L),
verbose = getOption("verbose"),
libs_only = FALSE, INSTALL_opts, quiet = FALSE,
keep_outputs = FALSE, ...)
# Install from CRAN
install.packages("tidyverse"
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(tidyverse)
setwd("~/Documents/GitHub/RDataClass")
ibrary(tidyverse)
read_csv("RDataCourse.csv", col_names = TRUE, col_types = NULL, id = NULL,  locale, n_max = Inf, skip = 0, na = c("", "NA"), guess_max = min(1000, n_max), show_col_types = TRUE)
library(tidyverse)
read_csv("RDataCourse.csv", col_names = TRUE, col_types = NULL,  locale, n_max = Inf, skip = 0, na = c("", "NA"), guess_max = min(1000, n_max))
library(tidyverse)
read_csv("RDataCourse.csv", col_names = TRUE)
library(tidyverse)
read_csv("RDataCourse.csv", col_names = TRUE, col_types = FALSE)
library(tidyverse)
read_csv("RDataCourse.csv", col_names = TRUE, col_types = NULL)
library(tidyverse)
StrokData<-read_csv("RDataCourse.csv", col_names = TRUE, col_types = NULL)
View(StrokData)
library(tidyverse)
StrokeData<-read_csv("RDataCourse.csv", col_names = TRUE, col_types = NULL)
library(tidyverse)
StrokeData<-read_csv("RDataCourse.csv", col_names = TRUE, col_types = NULL)
setwd("~/Documents/GitHub/D2M2022/datasets")
install.packages("readxl")
library(readxl)
mmdata<- read_excel("MM Data.xlsx", skip= 1)
install.packages("readxl")
mmdata
mmdata
mmdata.long <-mmdata %>%pivot_longer(cols = c("Red", "Green","Blue", "Orange","Yellow", "Brown"),names_to = "Color",values_to = "Number")
install.packages("magrittr")
library(magrittr)
mmdata.long <-mmdata %>%pivot_longer(cols = c("Red", "Green","Blue", "Orange","Yellow", "Brown"),names_to = "Color",values_to = "Number")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
mmdata.long <-mmdata %>%pivot_longer(cols = c("Red", "Green","Blue", "Orange","Yellow", "Brown"),names_to = "Color",values_to = "Number")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
mmdata.long <-mmdata %>%pivot_longer(cols = c("Red", "Green","Blue", "Orange","Yellow", "Brown"),names_to = "Color",values_to = "Number")
install.packages("magrittr")
library(magrittr)
mmdata.long <-mmdata %>%pivot_longer(cols = c("Red", "Green","Blue", "Orange","Yellow", "Brown"),names_to = "Color",values_to = "Number")
library(magrittr)
mmdata.long <-mmdata %>%
pivot_longer(cols = c("Red", "Green","Blue", "Orange","Yellow", "Brown"),names_to = "Color",values_to = "Number")
install.packages('Rcpp')
